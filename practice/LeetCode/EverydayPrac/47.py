# 5712. 你能构造出连续值的最大数目
#
# 给你一个长度为 n 的整数数组 coins ，它代表你拥有的 n 个硬币。第 i 个硬币的值为 coins[i] 。如果你从这些硬币中选出一部分硬币，它们的和为 x ，那么称，你可以 构造 出 x 。
#
# 请返回从 0 开始（包括 0 ），你最多能 构造 出多少个连续整数。
#
# 你可能有多个相同值的硬币。
#
# 示例 1：
# 输入：coins = [1,3]
# 输出：2
# 解释：你可以得到以下这些值：
# - 0：什么都不取 []
# - 1：取 [1]
# 从 0 开始，你可以构造出 2 个连续整数。
#
# 示例 2：
# 输入：coins = [1,1,1,4]
# 输出：8
# 解释：你可以得到以下这些值：
# - 0：什么都不取 []
# - 1：取 [1]
# - 2：取 [1,1]
# - 3：取 [1,1,1]
# - 4：取 [4]
# - 5：取 [4,1]
# - 6：取 [4,1,1]
# - 7：取 [4,1,1,1]
# 从 0 开始，你可以构造出 8 个连续整数。
#
# 我们只需要找出数组中还未被选的元素中最小的那个作为 y 即可。如果 y≤x+1，那么就可以更新答案区间，否则剩下更大的元素也不会对答案产生任何影响。
#
# 初始时我们没有选择任何元素，对应的区间为 [0, 0]。随后我们将数组中的元素升序排序，然后依次判断是否能更新答案区间即可。

class Solution:
    def getMaximumConsecutive(self, coins: List[int]) -> int:
        coins.sort()
        x = 0
        for y in coins:
            if y > x + 1:
                break
            x += y
        return x + 1
